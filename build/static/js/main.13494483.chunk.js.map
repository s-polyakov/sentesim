{"version":3,"sources":["components/Header.js","components/AddDoc.js","components/DocItem.js","components/DocsView.js","components/SentenceItem.js","components/SentencesView.js","components/SearchItem.js","components/SearchView.js","components/TextView.js","components/AppContainer.js","index.js"],"names":["Header","props","style","padding","lineHeight","fontSize","marginBottom","textAlign","AddDoc","serverURL","window","useState","content","inputText","setInputText","docStatus","setDocStatus","closeMsg","onSubmit","e","preventDefault","length","axios","post","concat","doc","then","response","newDoc","id","data","docId","title","addDocProps","msg","notFoundWords","join","catch","err","console","log","message","onErrorProp","className","name","rows","cols","value","onChange","target","type","onClick","displayMessage","DocItem","key","chooseSentencesViewProps","DocsView","docs","map","SentenceItem","sentence","searchProps","SentencesView","sentences","setSentences","pageSize","setPageSize","curPage","setCurPage","numberOfPages","setNumberOfPages","useEffect","get","params","numOfSentences","Math","ceil","search","sentenceId","chooseSearchViewProps","slice","item","SearchItem","rate","chooseTextView","SearchView","loading","setLoading","display","color","height","width","TextView","setDoc","docText","modeEnum","AppContainer","setDocs","mode","setMode","curDocId","setCurDocId","curSentenceId","setCurSentenceId","curTextId","setCurTextId","errMsg","setErrMsg","onError","pageNum","doc_titles","goNextPage","goPrevPage","returnToDocumentsView","returnToSentencesView","closeAlert","displayError","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13494483.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Header = props => {\r\n  const headerStyle = {\r\n    padding: \"20px 0\",\r\n    lineHeight: \"2em\",\r\n  };\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\", textAlign: \"center\"}}>\r\n        Similar Sentences Search App\r\n      </h1>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default Header","import React, {useState} from \"react\"\r\nimport axios from \"axios\";\r\n\r\nconst AddDoc = props => {\r\n    const serverURL = window.serverURL;\r\n\r\n    const [inputText, setInputText] = useState({\r\n        content: \"\",\r\n    });\r\n    const [docStatus, setDocStatus] = useState(\"\");\r\n\r\n    const onTextChange = e => {\r\n        setInputText({\r\n            ...inputText,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        setDocStatus(\"\");\r\n    };\r\n\r\n    const closeMsg = () => {\r\n        setDocStatus(\"\");\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (inputText.content.length === 0) {\r\n            setDocStatus(\"Document is empty\");\r\n        } else {\r\n            axios.post(serverURL.concat(\"/add\"), {doc: inputText.content})\r\n                .then(response => {\r\n                    const newDoc = {\r\n                        id: response.data.docId,\r\n                        title: response.data.title\r\n                    };\r\n\r\n                    props.addDocProps(newDoc);\r\n                    setInputText({\r\n                        content: \"\",\r\n                    });\r\n                    let msg = \"Document was added.\";\r\n                    if (response.data.notFoundWords.length > 0) {\r\n                        msg = msg + \" Not found words: \" + response.data.notFoundWords.join(\", \");\r\n                    }\r\n                    setDocStatus(msg);\r\n                }).catch(err => {\r\n                console.log(err.message);\r\n                props.onErrorProp(err);\r\n            });\r\n        }\r\n    };\r\n\r\n    const displayMessage = () => {\r\n        if (docStatus.length > 0) {\r\n            return <div className=\"info\">\r\n                <span className=\"closebtn\" onClick={closeMsg}>&times;</span>\r\n                {docStatus}\r\n            </div>\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit} className=\"form-container\">\r\n                <textarea className=\"input-text\" name=\"content\" rows=\"15\" cols=\"100\" value={inputText.content}\r\n                          onChange={onTextChange}/>\r\n                <div><input type=\"submit\" className=\"input-submit\" value=\"Add Document\"/>\r\n                </div>\r\n            </form>\r\n            {displayMessage()}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddDoc\r\n","import React from \"react\"\r\n\r\nconst DocItem = props => {\r\n  const { id, title } = props.doc\r\n  const onClick = () => {\r\n    props.chooseSentencesViewProps(id);\r\n    //() => props.expandSentencesProps(id);\r\n  }\r\n\r\n  return (\r\n    <article className=\"doc-item\" key={id}>\r\n      {title}\r\n      <button onClick={onClick}>By Sentences</button>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default DocItem\r\n","import React from \"react\";\r\nimport DocItem from \"./DocItem\";\r\n\r\nconst DocsView = (props) => {\r\n    return (\r\n        <section>\r\n            {props.docs.map(doc => (\r\n                <DocItem\r\n                    key={doc.id}\r\n                    doc={doc}\r\n                    chooseSentencesViewProps={props.chooseSentencesViewProps}\r\n                />\r\n            ))}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default DocsView;","import React from \"react\";\r\n\r\nconst SentenceItem = (props) => {\r\n    console.log(props);\r\n    const {id, content} = props.sentence;\r\n\r\n    const onClick = () => {\r\n        props.searchProps(id);\r\n    }\r\n\r\n    return <article className=\"doc-item\">\r\n        {content}\r\n        <button onClick={onClick}>Search</button>\r\n    </article>\r\n}\r\n\r\nexport default SentenceItem;","import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport SentenceItem from \"./SentenceItem\";\r\n\r\n\r\nconst SentencesView = (props) => {\r\n    const serverURL = window.serverURL;\r\n\r\n    const [sentences, setSentences] = useState([]);\r\n    const [pageSize, setPageSize] = useState(null);\r\n    const [curPage, setCurPage] = useState(null)\r\n    const [numberOfPages, setNumberOfPages] = useState(null);\r\n\r\n    const docId = props.docId;\r\n\r\n    useEffect(() => {\r\n            axios.get(serverURL.concat(\"/document_sentences\"),\r\n                {\r\n                    params: {\r\n                        docId: docId\r\n                    }\r\n                }\r\n            ).then(response => {\r\n                setSentences(response.data.sentences);\r\n                let numOfSentences = response.data.sentences.length;\r\n                setPageSize(response.data.pageSize);\r\n                setNumberOfPages(Math.ceil(numOfSentences/response.data.pageSize));\r\n                setCurPage(1);\r\n            }).catch(err => {\r\n                    console.log(err.message);\r\n                    props.onErrorProp(err);\r\n                }\r\n            );\r\n        },\r\n        []\r\n    );\r\n\r\n    const search = (sentenceId) => {\r\n        props.chooseSearchViewProps(docId, sentenceId);\r\n    }\r\n\r\n    const goNextPage = () => {\r\n        if (curPage < numberOfPages){\r\n            setCurPage(curPage + 1);\r\n        }\r\n    };\r\n\r\n    const goPrevPage = () => {\r\n        if (curPage > 1){\r\n            setCurPage(curPage - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            {sentences.slice((curPage - 1) * pageSize, curPage * pageSize).map(item => {\r\n                return <SentenceItem key={item.id} sentence={item} searchProps={search}/>\r\n            })}\r\n            <div className=\"page-numbering\">\r\n                    <button onClick={goPrevPage}>&lt;</button>\r\n                    <span className=\"page-number\">page {curPage} of {numberOfPages}</span>\r\n                    <button onClick={goNextPage}>&gt;</button>\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default SentencesView;","import React from \"react\";\r\n\r\nconst SearchItem = (props) => {\r\n    const {sentenceId, content, docId, rate} = props.sentence;\r\n\r\n    const onClick = () => {\r\n        props.chooseTextView(docId);\r\n    }\r\n\r\n    return (\r\n        <article className=\"doc-item\">\r\n            <p>rate: {rate}</p>\r\n            {content}\r\n            <button onClick={onClick}>Document</button>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default SearchItem;","import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from 'react-loader-spinner'\r\nimport SearchItem from \"./SearchItem\";\r\n\r\nconst SearchView = (props) => {\r\n    const serverURL = window.serverURL;\r\n\r\n    const [sentences, setSentences] = useState([])\r\n    const [pageSize, setPageSize] = useState(null);\r\n    const [curPage, setCurPage] = useState(null)\r\n    const [numberOfPages, setNumberOfPages] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(\r\n        () => {\r\n            setLoading(true);\r\n            axios.get(\r\n                serverURL.concat(\"/search\"),\r\n                {params: {docId: props.docId, sentenceId: props.sentenceId}}\r\n            ).then(\r\n                response => {\r\n                    setSentences(response.data.sentences)\r\n                    let numOfSentences = response.data.sentences.length;\r\n                    setPageSize(response.data.pageSize);\r\n                    setNumberOfPages(Math.ceil(numOfSentences / response.data.pageSize));\r\n                    setCurPage(1);\r\n                    setLoading(false);\r\n                }\r\n            ).catch(err => {\r\n                console.log(err.message);\r\n                props.onErrorProp(err);\r\n            })\r\n        },\r\n        []\r\n    )\r\n\r\n    const goNextPage = () => {\r\n        if (curPage < numberOfPages) {\r\n            setCurPage(curPage + 1);\r\n        }\r\n    };\r\n\r\n    const goPrevPage = () => {\r\n        if (curPage > 1) {\r\n            setCurPage(curPage - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            <div style={{display: loading ? \"block\" : \"none\"}}>\r\n                <Loader\r\n                    type=\"ThreeDots\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                />\r\n            </div>\r\n            {sentences.slice((curPage - 1) * pageSize, curPage * pageSize).map(\r\n                (item) => {\r\n                    return (<SearchItem key={item.id} sentence={item} chooseTextView={props.chooseTextView}/>)\r\n                }\r\n            )}\r\n            <div className=\"page-numbering\">\r\n                <button onClick={goPrevPage}>&lt;</button>\r\n                <span className=\"page-number\">page {curPage} of {numberOfPages}</span>\r\n                <button onClick={goNextPage}>&gt;</button>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SearchView;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst TextView = (props) => {\r\n    const serverURL = window.serverURL;\r\n\r\n    const docId = props.docId;\r\n\r\n    const [doc, setDoc] = useState(null);\r\n    useEffect(\r\n        () => {\r\n            axios.get(\r\n                serverURL.concat(\"/doctext\"),\r\n                {params:{docId:docId}}\r\n            ).then(\r\n                (response) => {\r\n                    setDoc(response.data.docText);\r\n                }\r\n            ).catch(err => {\r\n                console.log(err.message);\r\n                props.onErrorProp(err);\r\n            })\r\n        },\r\n        []\r\n    );\r\n\r\n    return (<article>\r\n            <p>{doc}</p>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default TextView;","import React, {useEffect, useState} from \"react\"\r\nimport Header from \"./Header\"\r\nimport AddDoc from \"./AddDoc\"\r\nimport DocsView from \"./DocsView\"\r\nimport SentencesView from \"./SentencesView\"\r\nimport SearchView from \"./SearchView\"\r\nimport TextView from \"./TextView\"\r\nimport axios from \"axios\"\r\n\r\nconst modeEnum = {\r\n    DOCS_VIEW: 1,\r\n    SENTENCES_VIEW: 2,\r\n    SEARCH_VIEW: 3,\r\n    TEXT_VIEW: 4\r\n}\r\n\r\nconst AppContainer = props => {\r\n    const serverURL = window.serverURL;\r\n\r\n    const [docs, setDocs] = useState([]);\r\n    const [mode, setMode] = useState(modeEnum.DOCS_VIEW);\r\n    const [curDocId, setCurDocId] = useState(null);\r\n    const [curSentenceId, setCurSentenceId] = useState(null);\r\n    const [curTextId, setCurTextId] = useState(null);\r\n    const [curPage, setCurPage] = useState(1);\r\n    const [numberOfPages, setNumberOfPages] = useState(0);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n            axios.get(serverURL.concat(\"/number_of_pages\"))\r\n                .then(response => {\r\n                        setNumberOfPages(response.data.numberOfPages);\r\n                        setCurPage(1);\r\n                    }\r\n                ).catch(err => {\r\n                    console.log(err.message);\r\n                    onError(err);\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    //load page with documents\r\n    useEffect(\r\n        () => {\r\n            axios.get(serverURL.concat(\"/doc_titles_page\"),\r\n                {params: {pageNum: curPage}}\r\n            ).then((response) => {\r\n                setDocs(response.data.doc_titles);\r\n            }).catch(err => {\r\n                    console.log(err.message);\r\n                    onError(err);\r\n            });\r\n\r\n        },\r\n        [curPage]\r\n    );\r\n\r\n\r\n    const goNextPage = () => {\r\n        if (curPage < numberOfPages) {\r\n            setCurPage(curPage + 1);\r\n        }\r\n    };\r\n\r\n    const goPrevPage = () => {\r\n        if (curPage > 1) {\r\n            setCurPage(curPage - 1);\r\n        }\r\n    };\r\n\r\n    const addDoc = newDoc => {\r\n        //setDocs([...docs, newDoc]);\r\n        axios.get(serverURL.concat(\"/number_of_pages\"))\r\n            .then(response => {\r\n                    setNumberOfPages(response.data.numberOfPages);\r\n                    if (curPage === response.data.numberOfPages) {//if page is last then update view to show last added doc\r\n                        axios.get(serverURL.concat(\"/doc_titles_page\"),\r\n                            {params: {pageNum: curPage}}\r\n                        ).then((response) => {\r\n                            setDocs(response.data.doc_titles);\r\n                        });\r\n                    }\r\n                }\r\n            ).catch(err => {\r\n                console.log(err.message);\r\n                onError(err);\r\n        });\r\n    };\r\n\r\n    const chooseTextView = (docId) => {\r\n        console.log(`chooseTextView ${docId}`);\r\n        setCurTextId(docId);\r\n        setMode(modeEnum.TEXT_VIEW)\r\n    }\r\n\r\n    const chooseSearchView = (docId, sentenceId) => {\r\n        // console.log(`${docId} ${sentenceId}`);\r\n        setCurDocId(docId);\r\n        setCurSentenceId(sentenceId);\r\n        setMode(modeEnum.SEARCH_VIEW);\r\n    };\r\n\r\n    const chooseSentencesView = (id) => {\r\n        setMode(modeEnum.SENTENCES_VIEW);\r\n        setCurDocId(id);\r\n    }\r\n\r\n    const returnToDocumentsView = () => {\r\n        setErrMsg(\"\");\r\n        setMode(modeEnum.DOCS_VIEW);\r\n    };\r\n\r\n    const returnToSentencesView = () => {\r\n        setErrMsg(\"\");\r\n        setMode(modeEnum.SENTENCES_VIEW);\r\n    };\r\n\r\n    const returnToSearchView = () => {\r\n        setErrMsg(\"\");\r\n        setMode(modeEnum.SEARCH_VIEW);\r\n    };\r\n\r\n    const onError = err => {\r\n        setErrMsg(err.message)\r\n    };\r\n\r\n    const onCloseErrMsg = () => {\r\n        setErrMsg(\"\");\r\n    };\r\n\r\n    const closeAlert = () => {\r\n        setErrMsg(\"\");\r\n    };\r\n\r\n    const displayError = () => {\r\n        if (errMsg.length > 0) {\r\n            return <div className=\"alert\">\r\n                <span className=\"closebtn\" onClick={closeAlert}>&times;</span>\r\n                {errMsg}\r\n            </div>\r\n        }\r\n    };\r\n\r\n    if (mode === modeEnum.DOCS_VIEW) {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header/>\r\n                {displayError()}\r\n                <main>\r\n                    <AddDoc addDocProps={addDoc} onErrorProp={onError}/>\r\n                    <DocsView\r\n                        docs={docs}\r\n                        chooseSentencesViewProps={chooseSentencesView}\r\n                    />\r\n                </main>\r\n                {(() => {\r\n                    if (numberOfPages !== 0) {\r\n                        return <div className=\"page-numbering\">\r\n                            <button onClick={goPrevPage}>&lt;</button>\r\n                            <span className=\"page-number\">page {curPage} of {numberOfPages}</span>\r\n                            <button onClick={goNextPage}>&gt;</button>\r\n                        </div>\r\n                    }\r\n                })()}\r\n            </div>\r\n        )\r\n    } else if (mode === modeEnum.SENTENCES_VIEW) {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header/>\r\n                {displayError()}\r\n                <main>\r\n                    <ul className=\"breadcrumb\">\r\n                        <li><button onClick={returnToDocumentsView}>Documents</button></li>\r\n                        <li>Sentences</li>\r\n                    </ul>\r\n                    <SentencesView docId={curDocId}\r\n                                   chooseSearchViewProps={chooseSearchView}\r\n                                   onErrorProp={onError}/>\r\n                </main>\r\n            </div>\r\n        )\r\n    } else if (mode === modeEnum.SEARCH_VIEW) {\r\n        return (<div className=\"container\">\r\n                <Header/>\r\n                {displayError()}\r\n                <main>\r\n                    <ul className=\"breadcrumb\">\r\n                        <li><button onClick={returnToDocumentsView}>Documents</button></li>\r\n                        <li><button onClick={returnToSentencesView}>Sentences</button></li>\r\n                        <li>Search</li>\r\n                    </ul>\r\n                    <SearchView docId={curDocId}\r\n                                sentenceId={curSentenceId}\r\n                                chooseTextView={chooseTextView}\r\n                                onErrorProp={onError}/>\r\n                </main>\r\n            </div>\r\n        )\r\n    } else if (mode === modeEnum.TEXT_VIEW) {\r\n        return (<div className=\"container\">\r\n                <Header/>\r\n                {displayError()}\r\n                <main>\r\n                    <ul className=\"breadcrumb\">\r\n                        <li><button onClick={returnToDocumentsView}>Documents</button></li>\r\n                        <li><button onClick={returnToSentencesView}>Sentences</button></li>\r\n                        <li><button onClick={returnToSearchView}>Search</button></li>\r\n                        <li>Document Text</li>\r\n                    </ul>\r\n                    <TextView docId={curTextId}\r\n                                onErrorProp={onError}/>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default AppContainer","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//component file\r\nimport AppContainer from \"./components/AppContainer\";\r\n\r\nimport \"./App.css\";\r\n\r\nReactDOM.render(<React.StrictMode><AppContainer /></React.StrictMode>, document.getElementById(\"root\"));\r\n\r\n\r\n"],"sourceRoot":""}